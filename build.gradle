/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'war'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://maven.pkg.github.com/hoangcongst/spring-common-lib')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    def springVersion = '2.6.6'
    implementation 'org.springframework.boot:spring-boot-starter-web:' + springVersion
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:' + springVersion
    implementation 'org.springframework.boot:spring-boot-starter-security:' + springVersion
    implementation 'org.springframework.boot:spring-boot-starter-validation:' + springVersion
    implementation 'org.springframework.boot:spring-boot-configuration-processor:' + springVersion
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:' + springVersion
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.boot:spring-boot-starter-cache:' + springVersion
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:' + springVersion
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'
    implementation 'com.hoangcongst:spring-common-lib:1.0.2'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:' + springVersion
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:' + springVersion
    testImplementation 'org.springframework.security:spring-security-test:5.6.2'
    providedCompile 'org.springframework.boot:spring-boot-starter-tomcat:' + springVersion
}

group = 'com.hoangcongst'
version = '0.0.1-SNAPSHOT'
description = 'springboot-boilerplate'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
